/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if((k==0) || (head==null) || (head.next==null)) return head;
        int len = 0;
        ListNode temp = head, tail = null;
        while(temp != null)
        {
            len++;
            if(temp.next == null) tail = temp;
            temp = temp.next;
        }

        int node = len - (k % len);
        if(node == 0) return head;
        temp = head;
        for(int i=1; i < node; i++) temp = temp.next;
        
        tail.next = head;
        if(temp.next == null) return head;
        ListNode new_head = temp.next;
        temp.next = null;
        return new_head;
    }
}
