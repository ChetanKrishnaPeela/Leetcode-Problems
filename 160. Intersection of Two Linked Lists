/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution 
{
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) 
    {
        ListNode tempA = headA;
        ListNode tempB = headB;
        int countA=0,countB=0;
        while(tempA != null)
        {
            countA++;
            tempA = tempA.next;
        }
        while(tempB != null)
        {
            countB++;
            tempB = tempB.next;
        }
        ListNode bigger = (countA > countB) ? headA:headB;
        ListNode smaller = (countA > countB) ? headB:headA;

        int ans = Math.abs(countA - countB);

        for(int i=0; i< ans; i++)
        {
            bigger = bigger.next;
        }
        while(bigger != smaller)
        {
            bigger = bigger.next;
            smaller = smaller.next;
            ans++;
        }
        return bigger;
    }
}
